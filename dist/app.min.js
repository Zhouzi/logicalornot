/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

	var _GameClass = __webpack_require__(1);

	var _GameClass2 = _interopRequireWildcard(_GameClass);

	var _questions = __webpack_require__(2);

	var _questions2 = _interopRequireWildcard(_questions);

	var _taunts = __webpack_require__(3);

	var _taunts2 = _interopRequireWildcard(_taunts);

	var app = new _GameClass2['default'](document, _questions2['default'], _taunts2['default']);

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _RoundClass = __webpack_require__(4);

	var _RoundClass2 = _interopRequireWildcard(_RoundClass);

	var _ViewClass = __webpack_require__(5);

	var _ViewClass2 = _interopRequireWildcard(_ViewClass);

	var _PubSubClass = __webpack_require__(6);

	var _PubSubClass2 = _interopRequireWildcard(_PubSubClass);

	var GameClass = (function () {
	  function GameClass(proxy, questions, taunts) {
	    _classCallCheck(this, GameClass);

	    this.questions = questions;
	    this.taunts = taunts;
	    this.stream = new _PubSubClass2['default'](this);
	    this.view = new _ViewClass2['default'](proxy, this.stream);
	    this.round = null;

	    this.bind();
	    this.newRound();

	    this.view.render('body', 'addClass', 'active');
	  }

	  _createClass(GameClass, [{
	    key: 'bind',
	    value: function bind() {
	      var _this = this;

	      this.stream.subscribe('round:newQuestion', function (newQuestion) {
	        _this.view.render('question', 'html', newQuestion.question);
	        _this.view.render('answer-left-label', 'html', newQuestion.answers.left.answer);
	        _this.view.render('answer-up-label', 'html', newQuestion.answers.up.answer);
	        _this.view.render('answer-right-label', 'html', newQuestion.answers.right.answer);
	      }).subscribe('round:updateLifeBar', function (hp) {
	        _this.view.render('life-bar', 'css', { width: '' + hp + '%' });
	      }).subscribe('round:newTaunt', function (taunt, type) {
	        //this.view.render('taunt', 'removeClass', 'active');
	        _this.view.render('taunt', 'html', taunt);

	        if (type === 'mean') {
	          _this.view.render('bloody', 'addClass', 'u-no-transition');
	          _this.view.render('bloody', 'addClass', 'active');
	          _this.view.render('bloody', 'removeClass', 'u-no-transition');
	        }

	        var self = _this;
	        setTimeout(function () {
	          //self.view.render('taunt', 'addClass', 'active');
	          if (type === 'mean') self.view.render('bloody', 'removeClass', 'active');
	        }, 200);
	      }).subscribe('round:gameOver', function (score) {
	        var template = '';

	        score.forEach(function (point) {
	          if (point === 1) template += '<span class="point point--right"></span>\n';else template += '<span class="point point--wrong"></span>\n';
	        });

	        _this.view.render('score-board', 'html', template);

	        // update href attribute of tweet button
	        var baseUrl = 'https://twitter.com/home?status=';
	        var tweetMessage = encodeURIComponent('Boom! Just made a score of ' + score.join('') + ', come and beat me! #logicalornot http://gabinaureche.com/logicalornot via @zh0uzi');

	        _this.view.render('tweet-my-game-button', 'attr', { href: baseUrl + tweetMessage });

	        // Show modal
	        _this.view.render('modal', 'removeClass', 'u-hide');

	        var self = _this;
	        setTimeout(function () {
	          return self.view.render('modal', 'addClass', 'active');
	        }, 100);
	      }).subscribe('view:newRound', function () {
	        _this.newRound();
	      }).subscribe('view:selectAnswer', function (answer) {
	        _this.round.submitAnswer(answer);
	      });
	    }
	  }, {
	    key: 'newRound',
	    value: function newRound() {
	      var _this2 = this;

	      if (this.round) {
	        if (this.round.status === 'game over') {
	          (function () {
	            _this2.view.render('modal', 'removeClass', 'active');

	            var self = _this2;
	            setTimeout(function () {
	              return self.view.render('modal', 'addClass', 'u-hide');
	            }, 500);
	          })();
	        }

	        this.round.stop();
	      }

	      this.round = new _RoundClass2['default'](this.questions, this.taunts, this.stream);
	    }
	  }]);

	  return GameClass;
	})();

	exports['default'] = GameClass;
	module.exports = exports['default'];

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = [
		{
			"question": "false || true",
			"answers": {
				"left": {
					"answer": "false"
				},
				"up": {
					"answer": "true",
					"correct": true
				},
				"right": {
					"answer": "undefined"
				}
			}
		},
		{
			"question": "null && false",
			"answers": {
				"left": {
					"answer": "null",
					"correct": true
				},
				"up": {
					"answer": "false"
				},
				"right": {
					"answer": "true"
				}
			}
		},
		{
			"question": "(false && 'bar') || 'foo'",
			"answers": {
				"left": {
					"answer": "false"
				},
				"up": {
					"answer": "'bar'"
				},
				"right": {
					"answer": "'foo'",
					"correct": true
				}
			}
		},
		{
			"question": "'foo' || 'bar'",
			"answers": {
				"left": {
					"answer": "'foo'",
					"correct": true
				},
				"up": {
					"answer": "'bar'"
				},
				"right": {
					"answer": "true"
				}
			}
		},
		{
			"question": "'foo' && 'bar' || 'quz'",
			"answers": {
				"left": {
					"answer": "'foo'"
				},
				"up": {
					"answer": "'bar'",
					"correct": true
				},
				"right": {
					"answer": "'quz'"
				}
			}
		},
		{
			"question": "!'foo' && 'bar'",
			"answers": {
				"left": {
					"answer": "'foo'"
				},
				"up": {
					"answer": "'bar'"
				},
				"right": {
					"answer": "false",
					"correct": true
				}
			}
		},
		{
			"question": "'foo' && !(false && null)",
			"answers": {
				"left": {
					"answer": "'foo'"
				},
				"up": {
					"answer": "false"
				},
				"right": {
					"answer": "true",
					"correct": true
				}
			}
		},
		{
			"question": "!undefined || 'foo'",
			"answers": {
				"left": {
					"answer": "true",
					"correct": true
				},
				"up": {
					"answer": "'foo'"
				},
				"right": {
					"answer": "false"
				}
			}
		},
		{
			"question": "'foo' || !!'bar'",
			"answers": {
				"left": {
					"answer": "'foo'",
					"correct": true
				},
				"up": {
					"answer": "true"
				},
				"right": {
					"answer": "false"
				}
			}
		},
		{
			"question": "(null && 'foo') || 'bar'",
			"answers": {
				"left": {
					"answer": "null"
				},
				"up": {
					"answer": "'foo'"
				},
				"right": {
					"answer": "'bar'",
					"correct": true
				}
			}
		},
		{
			"question": "(null || []).push('foo')",
			"answers": {
				"left": {
					"answer": "null"
				},
				"up": {
					"answer": "['foo']"
				},
				"right": {
					"answer": "1",
					"correct": true
				}
			}
		},
		{
			"question": "('foo' || 'bar').indexOf('f')",
			"answers": {
				"left": {
					"answer": "-1"
				},
				"up": {
					"answer": "0",
					"correct": true
				},
				"right": {
					"answer": "1"
				}
			}
		},
		{
			"question": "null || 'foo' && 'bar'",
			"answers": {
				"left": {
					"answer": "null"
				},
				"up": {
					"answer": "'foo'"
				},
				"right": {
					"answer": "'bar'",
					"correct": true
				}
			}
		},
		{
			"question": "[] && [].push('foo')",
			"answers": {
				"left": {
					"answer": "'foo'"
				},
				"up": {
					"answer": "['foo']"
				},
				"right": {
					"answer": "1",
					"correct": true
				}
			}
		},
		{
			"question": "null || [] || {}",
			"answers": {
				"left": {
					"answer": "null"
				},
				"up": {
					"answer": "[]",
					"correct": true
				},
				"right": {
					"answer": "'{}'"
				}
			}
		},
		{
			"question": "!!!'foo'",
			"answers": {
				"left": {
					"answer": "'foo'"
				},
				"up": {
					"answer": "true"
				},
				"right": {
					"answer": "false",
					"correct": true
				}
			}
		},
		{
			"question": "![].length",
			"answers": {
				"left": {
					"answer": "false"
				},
				"up": {
					"answer": "true",
					"correct": true
				},
				"right": {
					"answer": "0"
				}
			}
		},
		{
			"question": "'foo' && ('bar' || null)",
			"answers": {
				"left": {
					"answer": "'foo'"
				},
				"up": {
					"answer": "'bar'",
					"correct": true
				},
				"right": {
					"answer": "null"
				}
			}
		},
		{
			"question": "'foo' !== ('foo' && 'bar')",
			"answers": {
				"left": {
					"answer": "'foo'"
				},
				"up": {
					"answer": "true",
					"correct": true
				},
				"right": {
					"answer": "false"
				}
			}
		},
		{
			"question": "2 > (3 && 0)",
			"answers": {
				"left": {
					"answer": "false"
				},
				"up": {
					"answer": "true",
					"correct": true
				},
				"right": {
					"answer": "2"
				}
			}
		}
	]

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = {
		"nice": [
			"So, what's the result of...",
			"Such skills!",
			"Damn good!",
			"That was easy..."
		],
		"mean": [
			"Come on!",
			"...",
			"Really dude?",
			"Do you know javascript?",
			"Haha!",
			"Are u kidding me?"
		]
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _gameplay = __webpack_require__(7);

	var _gameplay2 = _interopRequireWildcard(_gameplay);

	var _requestAnimationFrame = __webpack_require__(8);

	var _requestAnimationFrame2 = _interopRequireWildcard(_requestAnimationFrame);

	var _cancelAnimationFrame = __webpack_require__(9);

	var _cancelAnimationFrame2 = _interopRequireWildcard(_cancelAnimationFrame);

	var _rand = __webpack_require__(10);

	var _rand2 = _interopRequireWildcard(_rand);

	var _ease = __webpack_require__(11);

	var _ease2 = _interopRequireWildcard(_ease);

	var FPS = 60;

	var RoundClass = (function () {
	  function RoundClass(questions, taunts, stream) {
	    _classCallCheck(this, RoundClass);

	    this.questions = questions;
	    this.taunts = taunts;
	    this.stream = stream;
	    this.status = 'ready';
	    this.taunt = null;
	    this.score = [];
	    this.currentIndex = null;
	    this.pickedIndexes = [];
	    this.lifeBar = 100;
	    this._animateId = null;

	    this.config = {
	      minValue: 0,
	      maxValue: 100,
	      iteration: 0,
	      totalIterations: _gameplay2['default'].duration * FPS,
	      winningGap: _gameplay2['default'].winningGap * FPS,
	      losingGap: _gameplay2['default'].losingGap * FPS
	    };

	    this.setLifeBarHp(this.config.maxValue);
	    this.setTaunt(0, 'nice');
	    this.setQuestion(0);
	    this.animate();
	  }

	  _createClass(RoundClass, [{
	    key: 'currentQuestion',

	    /*-------------------------------------------*\
	      question
	    \*-------------------------------------------*/

	    get: function () {
	      return this.questions[this.currentIndex];
	    }
	  }, {
	    key: 'randomIndex',
	    get: function () {
	      var index = _rand2['default'](0, this.questions.length - 1);
	      var maxExec = 10;

	      while (this.pickedIndexes.indexOf(index) > -1 && --maxExec > 0) {
	        index = _rand2['default'](0, this.questions.length - 1);
	      }

	      return index;
	    }
	  }, {
	    key: 'animate',

	    /*-------------------------------------------*\
	      animation
	    \*-------------------------------------------*/

	    value: function animate() {
	      if (this.status === 'game over') {
	        return;
	      }if (this.status === 'playing') {
	        if (this.config.iteration >= this.config.totalIterations) {
	          this.status = 'game over';
	          this.stream.publish('round:gameOver', this.score);
	          return;
	        }

	        var easingValue = _ease2['default'](this.config.iteration, this.config.minValue, this.config.maxValue, this.config.totalIterations);
	        this.setLifeBarHp(this.config.maxValue - easingValue);
	        this.config.iteration++;
	      }

	      var self = this;
	      this._animateId = _requestAnimationFrame2['default'](function () {
	        return self.animate.apply(self, []);
	      });
	    }
	  }, {
	    key: 'stop',
	    value: function stop() {
	      this.status = 'game over';
	      _cancelAnimationFrame2['default'](this._animateId);
	    }
	  }, {
	    key: 'setQuestion',

	    /*-------------------------------------------*\
	      question, answer
	    \*-------------------------------------------*/

	    value: function setQuestion(index) {
	      this.pickedIndexes.push(index);
	      this.currentIndex = index;

	      this.stream.publish('round:newQuestion', this.currentQuestion);
	      return this.currentQuestion;
	    }
	  }, {
	    key: 'submitAnswer',
	    value: function submitAnswer(answer) {
	      if (this.status === 'game over') {
	        return;
	      }this.status = 'playing';

	      var isCorrect = this.currentQuestion.answers[answer].correct === true;

	      if (isCorrect) {
	        this.riseLifeBar();
	        this.score.push(1);
	      } else {
	        this.dropLifeBar();
	        this.score.push(0);
	      }

	      this.setRandomTaunt(isCorrect);
	      this.setQuestion(this.randomIndex);
	    }
	  }, {
	    key: 'setTaunt',

	    /*-------------------------------------------*\
	      taunt
	    \*-------------------------------------------*/

	    value: function setTaunt(index) {
	      var type = arguments[1] === undefined ? 'nice' : arguments[1];

	      this.stream.publish('round:newTaunt', this.taunt = this.taunts[type][index], type);
	    }
	  }, {
	    key: 'setRandomTaunt',
	    value: function setRandomTaunt(isCorrect) {
	      var type = isCorrect ? 'nice' : 'mean';
	      var taunts = this.taunts[type];

	      return this.setTaunt(_rand2['default'](0, taunts.length - 1), type);
	    }
	  }, {
	    key: 'setLifeBarHp',

	    /*-------------------------------------------*\
	      life bar
	    \*-------------------------------------------*/

	    value: function setLifeBarHp(hp) {
	      this.lifeBar = hp;
	      this.stream.publish('round:updateLifeBar', hp);
	    }
	  }, {
	    key: 'riseLifeBar',
	    value: function riseLifeBar() {
	      if (this.config.iteration - this.config.winningGap <= 0) this.config.iteration = 0;else this.config.iteration -= this.config.winningGap;
	    }
	  }, {
	    key: 'dropLifeBar',
	    value: function dropLifeBar() {
	      if (this.config.iteration + this.config.losingGap >= this.config.totalIterations) this.config.iteration = this.config.totalIterations;else this.config.iteration += this.config.losingGap;
	    }
	  }]);

	  return RoundClass;
	})();

	exports['default'] = RoundClass;
	module.exports = exports['default'];

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var ViewClass = (function () {
	  function ViewClass(proxy, stream) {
	    _classCallCheck(this, ViewClass);

	    this.$proxy = typeof proxy === 'string' ? document.querySelector(proxy) : proxy;
	    this.stream = stream;
	    this.$elements = {};
	    this.$buttons = {};

	    this.bind();
	  }

	  _createClass(ViewClass, [{
	    key: 'bind',
	    value: function bind() {
	      var self = this;
	      var $proxy = self.$proxy;
	      var keys = { 37: 'left', 38: 'up', 39: 'right', 32: 'spacebar' };

	      // map data-bind buttons
	      var buttons = document.querySelectorAll('[data-bind]');

	      for (var i = 0, button = undefined; button = buttons[i]; i++) {
	        var keyShortcut = ViewClass.getAttribute(button, 'data-bind');

	        self.$buttons[keyShortcut] = {
	          element: button,
	          eventName: ViewClass.getAttribute(button, 'data-event'),
	          eventData: ViewClass.getAttribute(button, 'data-event-data')
	        };
	      }

	      $proxy.addEventListener('keydown', function (event) {
	        var keyName = keys[event.which];
	        if (!keyName) return;

	        var button = self.$buttons[keyName];
	        ViewClass.addClass(button.element, 'active');

	        event.preventDefault();
	      });

	      $proxy.addEventListener('keyup', function (event) {
	        var keyName = keys[event.which];
	        if (!keyName) return;

	        var button = self.$buttons[keyName];
	        ViewClass.removeClass(button.element, 'active');
	        self.publishButtonData(button);

	        event.preventDefault();
	      });

	      $proxy.addEventListener('click', function (event) {
	        for (var key in self.$buttons) {
	          if (!self.$buttons.hasOwnProperty(key)) continue;

	          if (self.$buttons[key].element.contains(event.target)) {
	            return self.publishButtonData(self.$buttons[key]);
	          }
	        }
	      });
	    }
	  }, {
	    key: 'publishButtonData',
	    value: function publishButtonData(button) {
	      this.stream.publish(button.eventName, button.eventData);
	    }
	  }, {
	    key: '$get',
	    value: function $get(selector) {
	      selector = 'bind-' + selector;

	      if (!this.$elements[selector]) {
	        this.$elements[selector] = document.getElementById(selector);
	      }

	      return this.$elements[selector];
	    }
	  }, {
	    key: 'render',
	    value: function render(selector, method) {
	      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	        args[_key - 2] = arguments[_key];
	      }

	      args.unshift(this.$get(selector));
	      return ViewClass[method].apply(this, args);
	    }
	  }], [{
	    key: 'html',

	    /*-------------------------------------------*\
	      statics (DOM manipulators)
	    \*-------------------------------------------*/

	    value: (function (_html) {
	      function html(_x, _x2) {
	        return _html.apply(this, arguments);
	      }

	      html.toString = function () {
	        return _html.toString();
	      };

	      return html;
	    })(function (element, html) {
	      element.innerHTML = html;
	    })
	  }, {
	    key: 'css',
	    value: function css(element, styles) {
	      for (var prop in styles) {
	        if (styles.hasOwnProperty(prop)) {
	          element.style[prop] = styles[prop];
	        }
	      }

	      return element;
	    }
	  }, {
	    key: 'addClass',
	    value: function addClass(element, className) {
	      return element.classList.add(className);
	    }
	  }, {
	    key: 'removeClass',
	    value: function removeClass(element, className) {
	      return element.classList.remove(className);
	    }
	  }, {
	    key: 'attr',
	    value: function attr(element, attrs) {
	      for (var prop in attrs) {
	        if (attrs.hasOwnProperty(prop)) {
	          element.setAttribute(prop, attrs[prop]);
	        }
	      }

	      return element;
	    }
	  }, {
	    key: 'getAttribute',
	    value: function getAttribute(element, attrName) {
	      return element.getAttribute(attrName);
	    }
	  }]);

	  return ViewClass;
	})();

	exports['default'] = ViewClass;
	module.exports = exports['default'];

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var PubSubClass = (function () {
	  function PubSubClass() {
	    var context = arguments[0] === undefined ? this : arguments[0];

	    _classCallCheck(this, PubSubClass);

	    this.context = context;
	    this.events = {};
	  }

	  _createClass(PubSubClass, [{
	    key: "subscribe",
	    value: function subscribe(eventName, callback) {
	      //console.log('subscribe');
	      (this.events[eventName] || (this.events[eventName] = [])).push(callback);

	      return this;
	    }
	  }, {
	    key: "publish",
	    value: function publish(eventName) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      //console.log('publish');
	      var subscribers = this.events[eventName] || [];
	      var context = this.context;

	      subscribers.forEach(function (callback) {
	        callback.apply(context, args);
	      });

	      return this;
	    }
	  }]);

	  return PubSubClass;
	})();

	exports["default"] = PubSubClass;
	module.exports = exports["default"];

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = {
		"duration": 10,
		"winningGap": 1,
		"losingGap": 1
	}

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	         value: true
	});
	var requestAnimationFrame = (function (w) {
	         var fn = w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.mozRequestAnimationFrame || function (callback) {
	                  w.setTimeout(callback, 1000 / 60);
	         };

	         // make sure the function is called with context set to window, otherwise it causes an illegal invocation
	         return function () {
	                  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	                           args[_key] = arguments[_key];
	                  }

	                  return fn.apply(w, args);
	         };
	})(window);

	exports["default"] = requestAnimationFrame;
	module.exports = exports["default"];

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	         value: true
	});
	var cancelAnimationFrame = (function (w) {
	         var fn = w.cancelAnimationFrame || w.mozCancelAnimationFrame || w.webkitCancelAnimationFrame || w.msCancelAnimationFrame || w.clearTimeout;

	         // make sure the function is called with context set to window, otherwise it causes an illegal invocation
	         return function () {
	                  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	                           args[_key] = arguments[_key];
	                  }

	                  return fn.apply(w, args);
	         };
	})(window);

	exports["default"] = cancelAnimationFrame;
	module.exports = exports["default"];

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports["default"] = function (min, max) {
	  return Math.floor(Math.random() * (max - min + 1)) + min;
	};

	module.exports = exports["default"];

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports["default"] = function (currentIteration, startValue, changeInValue, totalIterations) {
	  return -changeInValue * (currentIteration /= totalIterations) * (currentIteration - 2) + startValue;
	};

	module.exports = exports["default"];

/***/ }
/******/ ]);